$date
  Fri Sep  3 16:20:20 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module full_adder_4bits_tb $end
$var reg 4 ! a_tb[3:0] $end
$var reg 4 " b_tb[3:0] $end
$var reg 1 # ci_tb $end
$var reg 4 $ s_tb[3:0] $end
$var reg 1 % co_tb $end
$scope module dut $end
$var reg 4 & a_i[3:0] $end
$var reg 4 ' b_i[3:0] $end
$var reg 1 ( ci_i $end
$var reg 4 ) s_o[3:0] $end
$var reg 1 * co_o $end
$var reg 5 + carry_aux[4:0] $end
$scope module add_gen(0) $end
$scope module add $end
$var reg 1 , ci_i $end
$var reg 1 - a_i $end
$var reg 1 . b_i $end
$var reg 1 / s_o $end
$var reg 1 0 co_o $end
$upscope $end
$upscope $end
$scope module add_gen(1) $end
$scope module add $end
$var reg 1 1 ci_i $end
$var reg 1 2 a_i $end
$var reg 1 3 b_i $end
$var reg 1 4 s_o $end
$var reg 1 5 co_o $end
$upscope $end
$upscope $end
$scope module add_gen(2) $end
$scope module add $end
$var reg 1 6 ci_i $end
$var reg 1 7 a_i $end
$var reg 1 8 b_i $end
$var reg 1 9 s_o $end
$var reg 1 : co_o $end
$upscope $end
$upscope $end
$scope module add_gen(3) $end
$scope module add $end
$var reg 1 ; ci_i $end
$var reg 1 < a_i $end
$var reg 1 = b_i $end
$var reg 1 > s_o $end
$var reg 1 ? co_o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b1010 !
b1010 "
1#
b0101 $
1%
b1010 &
b1010 '
1(
b0101 )
1*
b10101 +
1,
0-
0.
1/
00
01
12
13
04
15
16
07
08
19
0:
0;
1<
1=
0>
1?
#10000000
