$date
  Fri Sep  3 16:27:08 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module full_adder_subs_4bit_tb $end
$var reg 4 ! a_tb[3:0] $end
$var reg 4 " b_tb[3:0] $end
$var reg 1 # sr_tb $end
$var reg 4 $ s_tb[3:0] $end
$var reg 1 % co_tb $end
$scope module dut $end
$var reg 1 & sr_i $end
$var reg 4 ' a_i[3:0] $end
$var reg 4 ( b_i[3:0] $end
$var reg 4 ) s_o[3:0] $end
$var reg 1 * co_o $end
$var reg 4 + b_i_aux[3:0] $end
$scope module uadder $end
$var reg 4 , a_i[3:0] $end
$var reg 4 - b_i[3:0] $end
$var reg 1 . ci_i $end
$var reg 4 / s_o[3:0] $end
$var reg 1 0 co_o $end
$var reg 5 1 carry_aux[4:0] $end
$scope module add_gen(0) $end
$scope module add $end
$var reg 1 2 ci_i $end
$var reg 1 3 a_i $end
$var reg 1 4 b_i $end
$var reg 1 5 s_o $end
$var reg 1 6 co_o $end
$upscope $end
$upscope $end
$scope module add_gen(1) $end
$scope module add $end
$var reg 1 7 ci_i $end
$var reg 1 8 a_i $end
$var reg 1 9 b_i $end
$var reg 1 : s_o $end
$var reg 1 ; co_o $end
$upscope $end
$upscope $end
$scope module add_gen(2) $end
$scope module add $end
$var reg 1 < ci_i $end
$var reg 1 = a_i $end
$var reg 1 > b_i $end
$var reg 1 ? s_o $end
$var reg 1 @ co_o $end
$upscope $end
$upscope $end
$scope module add_gen(3) $end
$scope module add $end
$var reg 1 A ci_i $end
$var reg 1 B a_i $end
$var reg 1 C b_i $end
$var reg 1 D s_o $end
$var reg 1 E co_o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b1010 !
b1010 "
0#
b0100 $
1%
0&
b1010 '
b1010 (
b0100 )
1*
b1010 +
b1010 ,
b1010 -
0.
b0100 /
10
b10100 1
02
03
04
05
06
07
18
19
0:
1;
1<
0=
0>
1?
0@
0A
1B
1C
0D
1E
#10000000
#20000000
1#
b0000 $
1%
1&
b0000 )
1*
b0101 +
b0101 -
1.
b0000 /
10
b11111 1
12
14
16
17
09
0:
1;
1<
1>
0?
1@
1A
0C
0D
1E
#30000000
